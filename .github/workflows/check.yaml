name: check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: formatting
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      
      - name: install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: install taplo
        run: cargo install taplo-cli

      - name: run Rust fmt
        run: cargo fmt --all -- --check

      - name: run TOML fmt
        run: taplo fmt --check

  per-target:
    name: ${{ matrix.job }}-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        include:
          # Linux targets
          - job: build
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - job: lint
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # macOS targets  
          - job: build
            os: macos-latest
            target: aarch64-apple-darwin
          - job: lint
            os: macos-latest
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          components: ${{ matrix.job == 'lint' && 'clippy' || '' }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.job }}/${{ matrix.target }}

      - name: Build
        if: matrix.job == 'build'
        run: cargo build --target ${{ matrix.target }} --workspace

      - name: Clippy
        if: matrix.job == 'lint'
        run: cargo clippy --target ${{ matrix.target }} --all-targets --all-features -- --deny warnings

  test:
    name: test/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: test-${{ matrix.os }}

      - name: Run tests
        run: cargo test --verbose --workspace

  udeps:
    name: unused_dependencies/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: udeps-${{ matrix.os }}
      
      - name: Install cargo-udeps
        run: cargo install cargo-udeps --locked
      
      - name: Check unused dependencies
        run: cargo +nightly udeps --workspace

  semver:
    name: semver
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-semver-checks
        uses: taiki-e/install-action@cargo-semver-checks

      - name: Run semver checks
        run: cargo semver-checks check-release --workspace